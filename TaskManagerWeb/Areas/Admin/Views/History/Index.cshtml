@using TaskManagerWeb.Models
@model ToDoVM

<div class="card shadow-sm border-0 rounded-4 overflow-hidden">
    <div class="card-header bg-white border-bottom d-flex align-items-center justify-content-between py-3 px-4">
        <h4 class="mb-0 fw-semibold" style="color:var(--tm-primary);">
            <i class="bi bi-clock-history me-2"></i> Storico Task
        </h4>

        <!-- 🔙 Pulsante Torna alla pagina precedente -->
        <a href="javascript:history.back()" class="btn btn-outline-tm px-4 py-2 rounded-3">
            <i class="bi bi-arrow-left-circle me-1"></i> Torna alla pagina precedente
        </a>
    </div>

    <div class="card-body px-4 py-4">
        <div class="row gy-3">
            <div class="col-12 col-lg-6">
                <h6 class="text-uppercase text-muted small mb-1 fw-semibold">Titolo</h6>
                <p class="fw-medium mb-0">@Html.Raw(Model.TaskToDo.Title)</p>
            </div>
            <div class="col-12 col-lg-6">
                <h6 class="text-uppercase text-muted small mb-1 fw-semibold">Descrizione</h6>
                <p class="fw-normal text-secondary mb-0">@Html.Raw(Model.TaskToDo.Description)</p>
            </div>
            <div class="col-12 col-lg-6">
                <h6 class="text-uppercase text-muted small mb-1 fw-semibold">Stato attuale</h6>
                <span class="badge rounded-pill px-3 py-2" style="background-color:rgba(28,125,111,0.1); color:#1c7d6f;">
                    @Html.Raw(Model.TaskToDo.Status.Name.ToString())
                </span>
            </div>
        </div>
    </div>

    <div class="card-footer bg-light border-0 px-4 pb-4">
        <h6 class="fw-semibold text-muted mb-3">
            <i class="bi bi-list-ul me-1"></i> Cronologia modifiche
        </h6>

        @if (Model.TaskToDo.History != null && Model.TaskToDo.History.Any(item => item.TaskItemId == Model.TaskToDo.Id))
        {
            <div class="table-responsive shadow-sm rounded-4 overflow-hidden">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr class="text-uppercase small text-muted">
                            <th scope="col">Utente</th>
                            <th scope="col">Da stato</th>
                            <th scope="col">A stato</th>
                            <th scope="col">Data</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TaskToDo.History.Where(item => item.TaskItemId == Model.TaskToDo.Id))
                        {
                            <tr>
                                <td class="fw-medium">@Html.Raw(item.AppUser.Name)</td>
                                <td><span class="badge bg-secondary-subtle text-dark px-3 py-2">@Html.Raw(item.FromStatus)</span></td>
                                <td><span class="badge bg-success-subtle text-dark px-3 py-2">@Html.Raw(item.ToStatus)</span></td>
                                <td class="text-muted">@Html.Raw(item.ChangeDate.ToString("g"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-3 border-0 rounded-3 shadow-sm">
                <i class="bi bi-info-circle me-1"></i> Nessuna cronologia disponibile per questo task.
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        .btn-outline-tm {
            color: var(--tm-primary) !important;
            background-color: #fff !important;
            border: 2px solid var(--tm-primary) !important;
            font-weight: 500;
            transition: all 0.25s ease-in-out;
        }

            .btn-outline-tm:hover,
            .btn-outline-tm:focus {
                background-color: var(--tm-primary) !important;
                color: #fff !important;
                border-color: var(--tm-primary) !important;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(28, 125, 111, 0.2);
            }
    </style>
}
